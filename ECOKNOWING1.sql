--모든 테이블 삭제하기
BEGIN
  FOR cur_rec IN (SELECT table_name FROM user_tables)
  LOOP
    EXECUTE IMMEDIATE 'DROP TABLE ' || cur_rec.table_name || ' CASCADE CONSTRAINTS';
  END LOOP;
END;
/

DROP TABLE USERS;
DROP TABLE WORDLIST;
DROP SEQUENCE SEQ_WORDLIST;
DROP TABLE LIST_1;
DROP TABLE TODAY_WORDS;

CREATE TABLE USERS (
    ID VARCHAR2(50) PRIMARY KEY,
    NAME VARCHAR2(50),
    AGE NUMBER,
    PW VARCHAR2(50),
    SAVED_WORDLIST NVARCHAR2(500) DEFAULT '1, 2, 3, 4, 5, 6'
);

CREATE SEQUENCE SEQ_WORDLIST
    START WITH 1
    INCREMENT BY 1
    NOMAXVALUE
    NOCYCLE;

CREATE TABLE WORDLIST (
    LIST_ID NUMBER PRIMARY KEY,
    WORD NVARCHAR2(500)
);

CREATE TABLE LIST_1 (
    WORD NVARCHAR2(100) PRIMARY KEY,
    MEAN VARCHAR2(500)
);
CREATE TABLE LIST_2 (
    WORD NVARCHAR2(100) PRIMARY KEY,
    MEAN VARCHAR2(500)
);
CREATE TABLE LIST_3 (
    WORD NVARCHAR2(100) PRIMARY KEY,
    MEAN VARCHAR2(500)
);
CREATE TABLE LIST_4 (
    WORD NVARCHAR2(100) PRIMARY KEY,
    MEAN VARCHAR2(500)
);
CREATE TABLE LIST_5 (
    WORD NVARCHAR2(100) PRIMARY KEY,
    MEAN VARCHAR2(500)
);
CREATE TABLE LIST_6 (
    WORD NVARCHAR2(100) PRIMARY KEY,
    MEAN VARCHAR2(500)
);

CREATE TABLE TODAY_WORDS (
    WORD NVARCHAR2(100),
    MEAN NVARCHAR2(500)
);


CREATE OR REPLACE TRIGGER TRG_WORDLIST
BEFORE INSERT ON WORDLIST
FOR EACH ROW
BEGIN
    :NEW.LIST_ID := SEQ_WORDLIST.NEXTVAL;
END;
/


INSERT INTO "USERS" (ID, NAME, AGE, PW) VALUES ('SOOMIN', '뜨', '19', '3308');
INSERT INTO "USERS" (ID, NAME, AGE, PW) VALUES ('mirim', '미림', '20', '0418');

INSERT INTO "WORDLIST" (WORD) VALUES ('세계 금융 단어 100개');
INSERT INTO "WORDLIST" (WORD) VALUES ('에듀테크단어');
INSERT INTO "WORDLIST" (WORD) VALUES ('어린이를 위한');
INSERT INTO "WORDLIST" (WORD) VALUES ('자주 쓰이는 통장 단어');
INSERT INTO "WORDLIST" (WORD) VALUES ('부동산 용어 100개');
INSERT INTO "WORDLIST" (WORD) VALUES ('월급 상식 단어');
INSERT INTO "WORDLIST" (WORD) VALUES ('7');
INSERT INTO "WORDLIST" (WORD) VALUES ('8');
INSERT INTO "WORDLIST" (WORD) VALUES ('9');
INSERT INTO "WORDLIST" (WORD) VALUES ('10');

INSERT INTO "LIST_1" (WORD, MEAN) VALUES (N'GDP', '일정 기간 동안 한 나라 영토 안에서 생산된 종생산물의 시장가치의 합계');
INSERT INTO "LIST_1" (WORD, MEAN) VALUES (N'인플레이션', '물가수준이 지속적으로 오르는 현상');

INSERT INTO "TODAY_WORDS" (WORD, MEAN) VALUES (N'GDP', N'일정 기간 동안 한 나라 영토 안에서 생산된 종생산물의 시장가치의 합계');
INSERT INTO "TODAY_WORDS" (WORD, MEAN) VALUES (N'인플레이션', N'물가수준이 지속적으로 오르는 현상');
INSERT INTO "TODAY_WORDS" (WORD, MEAN) VALUES (N'디플레이션', N'물가가 지속적으로 하락하는 현상');

UPDATE "USERS" SET SAVED_WORDLIST = SAVED_WORDLIST || N', 7, 8, 9' WHERE id = 'SOOMIN';
UPDATE "USERS" SET SAVED_WORDLIST = SAVED_WORDLIST || N', 8, 9' WHERE id = 'komaeda';

select word from wordlist where list_id = 1;
SELECT * FROM list_1;

SELECT u.ID, u.NAME, w.WORD
FROM USERS u
INNER JOIN WORDLIST w ON u.SAVED_WORDLIST LIKE '%' || w.LIST_ID || '%';

GRANT CREATE VIEW TO PUBLIC;
GRANT SELECT ON USERS TO PUBLIC;
GRANT SELECT ON WORDLIST TO PUBLIC;
GRANT SELECT ON LIST_1 TO PUBLIC;

INSERT INTO "USERS" (ID, NAME, AGE, PW, SAVED_WORDLIST)
VALUES (
  'admin',
  '주인',
  '0',
  '1234',
  (
    SELECT LISTAGG(LIST_ID, ', ') WITHIN GROUP (ORDER BY LIST_ID)
    FROM WORDLIST
  )
);

SELECT ID FROM USERS;

CREATE OR REPLACE VIEW AgeUnder20 AS
    SELECT
        users.ID  USER_ID,
        users.NAME  USER_NAME,
        users.AGE  USER_AGE,
        COUNT(wordlist.WORD) LIST_1_WORD_COUNT
    FROM
        users
        LEFT JOIN wordlist ON users.saved_wordlist LIKE '%' || wordlist.list_id || '%'
        LEFT JOIN list_1 ON wordlist.word = list_1.word
    GROUP BY
        users.ID, users.NAME, users.AGE;
        
        SELECT COUNT(*) COUNT
      FROM Wordlist_View;


-- age가 20 미만인 사람의 수를 조회
SELECT COUNT(*) AgeUnderCount
FROM AgeUnder20
WHERE USER_AGE < 20;







